#version 430

layout(binding=0) uniform samplerCube CubeMapTex;

uniform bool DrawSkyBox;
uniform mat4 view;
uniform float ReflectFactor;

uniform float ratioR;
uniform float ratioG;
uniform float ratioB;

in vec3 worldNorm;
in vec3 worldView;

out vec4 FragColor;

void main() {

    vec3 ReflectDir = reflect(-worldView, worldNorm );
	ReflectDir = vec3 (inverse(view) * vec4 (ReflectDir, 0.0));

	vec3 RefractDirR = refract(-worldView, worldNorm, ratioR);
	RefractDirR = vec3 (inverse(view) * vec4(RefractDirR, 0.0));

	vec3 RefractDirG = refract(-worldView, worldNorm, ratioG);
	RefractDirG = vec3 (inverse(view) * vec4(RefractDirG, 0.0));

	vec3 RefractDirB = refract(-worldView, worldNorm, ratioB);
	RefractDirB = vec3 (inverse(view) * vec4(RefractDirB, 0.0));

    vec4 FinalReflectColor = texture(CubeMapTex, ReflectDir);

    vec4 FinalRefractColor = vec4(0.0);

	FinalRefractColor.r = texture (CubeMapTex, RefractDirR).r;
	FinalRefractColor.g = texture (CubeMapTex, RefractDirG).g;
	FinalRefractColor.b = texture (CubeMapTex, RefractDirB).b;
	FinalRefractColor.a = 1.0;

	FragColor = mix(FinalRefractColor, FinalReflectColor, ReflectFactor);
}
